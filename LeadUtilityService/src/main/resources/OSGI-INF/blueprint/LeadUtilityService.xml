<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:camel="http://camel.apache.org/schema/blueprint"
	xmlns:cxf="http://camel.apache.org/schema/blueprint/cxf" xmlns:jaxws="http://cxf.apache.org/blueprint/jaxws"
	xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.0.0"
	xmlns:camelcxf="http://camel.apache.org/schema/blueprint/cxf"
	xsi:schemaLocation="
       http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
       http://camel.apache.org/schema/blueprint/cxf http://camel.apache.org/schema/blueprint/cxf/camel-cxf.xsd
       http://cxf.apache.org/blueprint/jaxws http://cxf.apache.org/schemas/blueprint/jaxws.xsd
       http://camel.apache.org/schema/blueprint  http://camel.apache.org/schema/blueprint/camel-blueprint-2.12.0.xsd">

	<cxf:rsServer id="LeadUtilityEndPoint" address="/leadutilityservice"
		serviceClass="com.idep.leadutility.service.LeadUtilityService"
		loggingFeatureEnabled="true">
		<cxf:providers>
			<bean
				class="org.apache.cxf.rs.security.cors.CrossOriginResourceSharingFilter" />
		</cxf:providers>
	</cxf:rsServer>

	<bean id="myDeadLetterErrorHandler" class="org.apache.camel.builder.DeadLetterChannelBuilder">
		<property name="deadLetterUri" value="activemq:queue:DLQ" />
		<property name="redeliveryPolicy" ref="myRedeliveryPolicyConfig" />
	</bean>

	<bean id="myRedeliveryPolicyConfig" class="org.apache.camel.processor.RedeliveryPolicy">
		<property name="maximumRedeliveries" value="100" />
		<property name="redeliveryDelay" value="3000000" />
		<property name="asyncDelayedRedelivery" value="true" />
		<property name="retryAttemptedLogLevel" value="WARN" />
	</bean>

	<cm:property-placeholder persistent-id="LeadsQProperties">
	</cm:property-placeholder>

	<bean id="jmsConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
		<property name="brokerURL" value="${amqbroker.host}:${amqbroker.port}" />
		<property name="userName" value="${amqbroker.username}" />
		<property name="password" value="${amqbroker.password}" />
	</bean>

	<bean id="pooledConnectionFactory" class="org.apache.activemq.pool.PooledConnectionFactory"
		init-method="start" destroy-method="stop">
		<property name="maxConnections" value="${amq.maxConnections}" />
		<property name="connectionFactory" ref="jmsConnectionFactory" />
	</bean>

	<bean id="jmsConfig" class="org.apache.camel.component.jms.JmsConfiguration">
		<property name="connectionFactory" ref="pooledConnectionFactory" />
		<property name="concurrentConsumers" value="${amq.concurrentConsumers}" />
		<property name="mapJmsMessage" value="${amq.mapJmsMessage}" />
		<property name="maxConcurrentConsumers" value="${amq.maxConcurrentConsumers}" />
		<property name="deliveryPersistent" value="false" />
		<property name="acknowledgementModeName" value="CLIENT_ACKNOWLEDGE" />
	</bean>

	<bean id="activemq" class="org.apache.activemq.camel.component.ActiveMQComponent">
		<property name="configuration" ref="jmsConfig" />
		<property name="transacted" value="${amq.transacted}" />
		<property name="cacheLevelName" value="${amq.cacheLevelName}" />
	</bean>

	<bean id="LeadUtilityMessageProcessor"
		class="com.idep.leadutility.processor.LeadUtilityMessageProcessor" />
	<bean id="LeadFormDataProcessor" class="com.idep.leadutility.processor.LeadFormDataProcessor" />
	<bean id="LeadRequestPrepare" class="com.idep.leadutility.processor.LeadRequestPrepare" />

	<bean id="LeadUtilityQshutdownStrategy" class="org.apache.camel.impl.DefaultShutdownStrategy">
		<property name="timeout" value="30" />
	</bean>

	<camelContext id="LeadUtilityContext" trace="false"
		threadNamePattern="LeadUtilityReq:#counter#" xmlns="http://camel.apache.org/schema/blueprint">
		<properties>
			<property key="CamelLogDebugBodyMaxChars" value="20000000" />
		</properties>
		<route id="LeadUtilityService">
			<from uri="cxfrs:bean:LeadUtilityEndPoint" />
			<choice id="LeadUtilityChoice">
				<when id="uploadDataFormation">
					<simple id="collectUploadDataMethod">${header.operationName} == "importLeads"</simple>
					<bean ref="LeadUtilityMessageProcessor" method="collectUploadData"
						id="LeadUtilityMsgProcessor" />
					<log message="import lead format request received : ${body}" />
					<process ref="LeadRequestPrepare" id="LeadRequest" />
				</when>
				<when id="getLeadFormData">
					<simple id="getLeadFormDataMethod">${header.operationName} == "getLeadFormData"</simple>
					<bean ref="LeadUtilityMessageProcessor" method="getLeadFormData"
						id="getLeadFormDataMsgProc" />
					<process ref="LeadFormDataProcessor" id="LeadFormDataProcessorClass" />
				</when>
			</choice>
		</route>
	</camelContext>
</blueprint>
