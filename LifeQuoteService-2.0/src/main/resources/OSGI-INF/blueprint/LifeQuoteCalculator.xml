<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
       xmlns:cxf="http://camel.apache.org/schema/blueprint/cxf"
       xsi:schemaLocation="
       http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
        http://camel.apache.org/schema/blueprint/cxf http://camel.apache.org/schema/blueprint/cxf/camel-cxf.xsd
       http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd">
 
<cxf:rsServer id="LifeQuoteEndpoint" address="/lifequoterestservice" serviceClass="com.idep.lifequote.service.LifeQuoteCalcService" loggingFeatureEnabled="true">
<cxf:providers>
        <bean class="org.apache.cxf.rs.security.cors.CrossOriginResourceSharingFilter" />
</cxf:providers>
</cxf:rsServer>

<bean id="LifeQuoteshutdownStrategy" class="org.apache.camel.impl.DefaultShutdownStrategy">
        <property name="timeout" value="30"/>
</bean>

<bean id="LifeQuoteCalcServiceImpl" class="com.idep.lifequote.service.impl.LifeQuoteCalcServiceImpl"/>  
<bean id="LifeQuoteResponse" class="com.idep.lifequote.response.bean.LifeQuoteResponse"/>
<bean id="LifeRequestProcessor" class="com.idep.lifequote.req.processor.LifeRequestProcessor"/>
<bean id="LifeProductRequestProcessor" class="com.idep.lifequote.req.processor.LifeProductRequestProcessor"/>
<bean id="GenericResponseProcessor" class="com.idep.lifequote.res.processor.GenericResponseProcessor"/>
<bean id="P365LifeReqQListener" class="com.idep.lifequote.queue.listener.P365LifeReqQListener" />
<bean id="LifeRequestQProcessor" class="com.idep.lifequote.req.processor.LifeRequestQProcessor" />
<bean id="LifeQuoteDBSender" class="com.idep.lifequote.res.processor.LifeQuoteDBSender" />
<bean id="LifeDroolReqFromProcessor" class="com.idep.lifequote.req.form.LifeDroolReqFromProcessor" />
<bean id="LifeDroolResponseProcessor" class="com.idep.lifequote.req.form.LifeDroolResponseProcessor" />
<bean id="LifeMQMsgProcessor" class="com.idep.lifequote.service.impl.LifeMQMsgProcessor" />
<bean id="ExceptionMQMSGProcessor" class="com.idep.lifequote.exception.processor.ExceptionMQMSGProcessor"/>
<bean id="LifeReqRiderProcessor" class="com.idep.lifequote.req.processor.LifeReqRiderProcessor" />
<bean id="LifeResRiderProcessor" class="com.idep.lifequote.res.processor.LifeResRiderProcessor" />
<bean id="LifeQuoteResponseProcessor" class="com.idep.lifequote.res.processor.LifeQuoteResponseProcessor" />
<bean id="LifeQuoteLoggerProcessor" class="com.idep.lifequote.logger.processor.LifeQuoteLoggerProcessor" />

<bean id="KotakSOAPReqProcessor" class="com.idep.lifequote.req.transformer.KotakSOAPReqProcessor"/>
<bean id="SOAPResponseFormatter" class="com.idep.lifequote.req.transformer.SOAPResponseFormatter"/> 
<bean id="XMLCharEmitter" class="com.idep.lifequote.req.transformer.XMLCharEmitter"/> 
<bean id="KotakQuoteResponseHandler" class="com.idep.lifequote.carrier.processor.KotakQuoteResponseHandler"/> 
<bean id="KotakRequestTransformer" class="com.idep.lifequote.req.transformer.KotakRequestTransformer"/> 
<bean id="KotakQuoteHandler" class="com.idep.lifequote.carrier.res.processor.KotakQuoteHandler"/> 
<bean id="KotakQuoteNumSetter" class="com.idep.lifequote.carrier.res.processor.KotakQuoteNumSetter"/> 
<bean id="PremiumRatioCalculateProcessor" class="com.idep.lifequote.res.processor.PremiumRatioCalculateProcessor"/>

<bean id="ExternalLifeServiceRespHandler" class="com.idep.lifequote.res.processor.ExternalLifeServiceRespHandler"/>

<cm:property-placeholder persistent-id="AMQCustomProperties"> 
 </cm:property-placeholder> 

<bean id="jmsConnectionFactory"
   class="org.apache.activemq.ActiveMQConnectionFactory">
   <property name="brokerURL" value="${amqbroker.host}:${amqbroker.port}" />
   <property name="userName" value="${amqbroker.username}"/>
   <property name="password" value="${amqbroker.password}"/>
</bean>
 
<bean id="pooledConnectionFactory"
   class="org.apache.activemq.pool.PooledConnectionFactory" init-method="start" destroy-method="stop">
   <property name="maxConnections" value="${amq.maxConnections}" />
   <property name="connectionFactory" ref="jmsConnectionFactory" />
</bean>
 
<bean id="jmsConfig"
   class="org.apache.camel.component.jms.JmsConfiguration">
   <property name="connectionFactory" ref="pooledConnectionFactory"/>
   <property name="concurrentConsumers" value="${amq.concurrentConsumers}"/>
   <property name="mapJmsMessage" value="${amq.mapJmsMessage}" />
   <property name="maxConcurrentConsumers" value="${amq.maxConcurrentConsumers}" />
   <property name="asyncConsumer" value="${amq.asyncConsumer}" />
   <property name="asyncStartListener" value="${amq.asyncStartListener}" />  
</bean>
 
 <bean id="activemq"
    class="org.apache.activemq.camel.component.ActiveMQComponent">
    <property name="configuration" ref="jmsConfig"/>
	 <!-- if we are using transacted then enable CACHE_CONSUMER (if not using XA) to run faster
         see more details at: http://camel.apache.org/jms
    -->
    <property name="transacted" value="${amq.transacted}"/>
    <property name="cacheLevelName" value="${amq.cacheLevelName}" />
</bean>

<!-- Code added for 2ndary -->
<bean id="jmsConnectionFactorySecondary"
   class="org.apache.activemq.ActiveMQConnectionFactory">
   <property name="brokerURL" value="${amqbroker.secondaryhost}:${amqbroker.secondaryport}" />
   <property name="userName" value="${amqbroker.username}"/>
   <property name="password" value="${amqbroker.password}"/>
</bean>
 
<bean id="pooledConnectionFactorySecondary"
   class="org.apache.activemq.pool.PooledConnectionFactory" init-method="start" destroy-method="stop">
  <property name="maxConnections" value="${amq.maxConnections}" /> 
   <property name="connectionFactory" ref="jmsConnectionFactorySecondary" />
</bean>
<bean id="jmsConfigSecondary"
   class="org.apache.camel.component.jms.JmsConfiguration">
   <property name="connectionFactory" ref="pooledConnectionFactorySecondary"/>
   <property name="concurrentConsumers" value="${amq.concurrentConsumers}"/>
   <property name="mapJmsMessage" value="${amq.mapJmsMessage}" />
   <property name="maxConcurrentConsumers" value="${amq.maxConcurrentConsumers}" />
   <property name="asyncConsumer" value="${amq.asyncConsumer}" />
   <property name="asyncStartListener" value="${amq.asyncStartListener}" />  
</bean>
 
 <bean id="activemqSecondary"
    class="org.apache.activemq.camel.component.ActiveMQComponent">
    <property name="configuration" ref="jmsConfigSecondary"/>
    <property name="transacted" value="${amq.transacted}"/>
    <property name="cacheLevelName" value="${amq.cacheLevelName}" />
</bean>



    
<camelContext threadNamePattern="LifeThread:#counter#" id="LifeQuoteCalculatorService" xmlns="http://camel.apache.org/schema/blueprint">
  <threadPoolProfile poolSize="50" maxPoolSize="100" maxQueueSize="1000" customId="true" id="lifereqPool"/>
  <route id="LifeQuoteCalculatorRoute">
    <from uri="cxfrs:bean:LifeQuoteEndpoint"/>
    <choice id="LifeQuoteDecision">
      <when id="LifeQuoteCalcReq">
        <simple>${header.operationName} == "calculateLifeQuote"</simple>
        <bean ref="LifeQuoteCalcServiceImpl" method="calculateQuote" id="LifeQuoteReqBean"/>
        <process ref="LifeRequestProcessor" id="LifeQuoteReqProcessor"/>
        <bean ref="LifeQuoteResponse" method="sendGenericResponse"/>
      </when>
      <when id="LifeProductQuoteCalcReq">
        <simple>${header.operationName} == "calculateLifeProductQuote"</simple>
        <bean ref="LifeQuoteCalcServiceImpl" method="calculateQuote" id="LifeProductQuoteReqBean"/>
        <process ref="LifeProductRequestProcessor" id="LifeProductRequestProcessor"/>
        <bean ref="LifeQuoteResponse" method="sendGenericResponse"/>
      </when>
    </choice>
   
  </route>
</camelContext>
</blueprint>