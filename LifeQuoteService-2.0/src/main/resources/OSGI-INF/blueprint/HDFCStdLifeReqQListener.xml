<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:cxf="http://camel.apache.org/schema/blueprint/cxf"
       xsi:schemaLocation="
       http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
        http://camel.apache.org/schema/blueprint/cxf http://camel.apache.org/schema/blueprint/cxf/camel-cxf.xsd
       http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd">

 <camelContext threadNamePattern="HDFCLife:#counter#" id="HDFCStdLifeReqQContext" xmlns="http://camel.apache.org/schema/blueprint">
 
 <onException id="ConnectException">
    <exception>java.net.ConnectException</exception>
    <exception>java.net.SocketTimeoutException</exception>
    <exception>java.net.SocketException</exception>
    <handled>
      <constant>true</constant>
    </handled>
    <log message="HDFC quote service seems to be down or not responded within stipulated time frame"/>
    <process ref="ExceptionMQMSGProcessor" customId="true" id="HDFCLifeExceptionMQMSGProcessor"/>
    <to pattern="InOnly" uri="activemq:queue:HDFCStdLifeResQ?timeToLive=120000&amp;includeSentJMSMessageID=true"/>
  </onException>
  <onException id="HttpOperationFailedException">
    <exception>org.apache.camel.component.http4.HttpOperationFailedException</exception>
    <handled>
      <constant>true</constant>
    </handled>
    <log message="HDFC LIFE quote service HttpOperationFailed : check input values provided "/>
    <process ref="ExceptionMQMSGProcessor" customId="true" id="HDFCLifeHTTPExcpMQProcessor"/>
    <to pattern="InOnly" uri="activemq:queue:HDFCStdLifeResQ?timeToLive=120000&amp;includeSentJMSMessageID=true"/>
  </onException>
  <onException id="TerminateExecution">
    <exception>com.idep.lifequote.exception.processor.ExecutionTerminator</exception>
    <handled>
      <constant>true</constant>
    </handled>
    <log message="HDFC LIFE quote service Terminated "/>
    <process ref="ExceptionMQMSGProcessor" customId="true" id="HDFCLifeExceptionQuoteProcessor"/>
    <to pattern="InOnly" uri="activemq:queue:HDFCStdLifeResQ?timeToLive=120000&amp;includeSentJMSMessageID=true"/>
  </onException>
 
 <route id="HDFCStdLifeReqQListener">
    <from uri="activemq:queue:HDFCStdLifeReqQ" id="HDFCLifeReqQ"/>
    <bean ref="P365LifeReqQListener" method="onMessage" id="LifeQuoteReqQListener"/>
    <process ref="LifeRequestQProcessor" id="LifeQuoteRequestProcessor"/>
    <process ref="LifeQuoteLoggerProcessor" id="HDFCLifeLoggerProcessor1"/>
    
    <process ref="LifeReqRiderProcessor" id="LifeQuoteRequestRiderProcessor"/>
    <process ref="LifeQuoteLoggerProcessor" id="HDFCLifeLoggerProcessor2"/>
    
    <log message="HDFCLifeReqRiderProcessor body : ${body} " id="RequestLogger"/>
    <process ref="LifeDroolReqFromProcessor" id="LifeQuoteEngineRequest"/>
    <process ref="LifeQuoteLoggerProcessor" id="HDFCLifeLoggerProcessor3"/>
    
    <choice id="SendQuoteRequest">
      <when id="QuoteEngineReq">
        <simple id="SUCCESS">${header.reqFlag} == "True"</simple>
        <log id="SuccessMsgLogger" message="HDFCStd LifeQuote : quoteURL : ${header.quoteURL}  header quoteType ${header.quoteType} : message body :${body}  "/>
        <recipientList id="HDFCURL">
          <simple id="QuoteEngineServiceConsumer">${header.quoteURL}</simple>
        </recipientList>
        <log message="HDFCStd LifeQuote drool response : ${body}" id="QuoteResponseLogger"/>
        <bean ref="LifeQuoteResponse" method="sendQuoteResponse" id="QuoteResponseMapper"/>
        <process ref="LifeDroolResponseProcessor" id="QuoteEngineResponseProcessor"/>
        <process ref="LifeQuoteLoggerProcessor" id="HDFCLifeLoggerProcessor4"/>
        
        <process ref="LifeResRiderProcessor" id="LifeQuoteResRiderProcessor"/>
          <process ref="PremiumRatioCalculateProcessor" id="HDDFCPremiumRatioCalculateProcessor"/>
        <process ref="LifeQuoteLoggerProcessor" id="HDFCLifeLoggerProcessor5"/>
        
        <process ref="LifeQuoteResponseProcessor" id="LifeQuoteResponseProcessor"/>
        <process ref="LifeQuoteLoggerProcessor" id="HDFCLifeLoggerProcessor6"/>
        
        <bean ref="LifeQuoteResponse" method="sendQuoteResponse" id="SendResponse"/>
        <multicast id="PrepareQuoteResponseCopy">
          <pipeline id="SaveQuotes">
            <log message="request/response sent to save HDFC LIFE quote in database"/>
            <process ref="LifeQuoteDBSender" id="PushToQ"/>
            <process ref="LifeQuoteLoggerProcessor" id="HDFCLifeLoggerProcessor7"/>
            <to pattern="InOnly" uri="activemq:queue:LifeQuoteResultsQ" id="LifeQuoteResultsQ"/>
          </pipeline>
          <pipeline id="SendQuotes">
        	<process ref="LifeMQMsgProcessor" id="LifeQuoteResQProcessor"/>
        	<process ref="LifeQuoteLoggerProcessor" id="HDFCLifeLoggerProcessor8"/>
        	
        	<wireTap uri="activemqSecondary:queue:HDFCStdLifeResQ?includeSentJMSMessageID=true"/>
        	<to pattern="InOnly" id="HDFCLifeRESQ" uri="activemq:queue:HDFCStdLifeResQ?timeToLive=120000&amp;includeSentJMSMessageID=true"/>
        	<log id="SuccessMsgLoggerQ" message="HDFCStdLifeResQ JMS Message Id from Q : ${header.JMSMessageID}"/>
          </pipeline>
        </multicast>
      </when>
      <when id="QUOTEPROCESSFAILED">
        <simple id="INITIATEFAILURE">${header.reqFlag} == "False"</simple>
        <bean ref="LifeQuoteResponse" method="requestError" id="PrepareErrorMsg"/>
        <process ref="LifeMQMsgProcessor" id="ErrorMsgProcessor"/>
        <process ref="LifeQuoteLoggerProcessor" id="HDFCLifeLoggerProcessor8"/>
        
        <wireTap uri="activemqSecondary:queue:HDFCStdLifeResQ?includeSentJMSMessageID=true"/>
        <to pattern="InOnly" id="HDFCLifeRESQ" uri="activemq:queue:HDFCStdLifeResQ?timeToLive=120000&amp;includeSentJMSMessageID=true"/>
        <log id="ErrorMsgLogger" message="HDFCStdLifeResQ JMS Message Id from Q : ${header.JMSMessageID}"/>        
      </when>
    </choice>
  </route>
  </camelContext>

</blueprint>
