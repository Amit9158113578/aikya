<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:camel="http://camel.apache.org/schema/blueprint"
       xmlns:cxf="http://camel.apache.org/schema/blueprint/cxf"
	   xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
       xmlns:jaxrs="http://cxf.apache.org/blueprint/jaxrs" 
       xsi:schemaLocation=" 
       http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
       http://camel.apache.org/schema/blueprint/cxf http://camel.apache.org/schema/blueprint/cxf/camel-cxf.xsd
       http://cxf.apache.org/blueprint/jaxrs http://cxf.apache.org/schemas/blueprint/jaxrs.xsd
       http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd">

<cxf:rsServer id="serviceEndpoint"  address="/authrestservices" serviceClass="com.idep.webservice.redirect.WebServiceRedirect" loggingFeatureEnabled="true" >
<cxf:providers>
        <bean class="org.apache.cxf.rs.security.cors.CrossOriginResourceSharingFilter" />
 </cxf:providers>
 </cxf:rsServer>
 

<bean id="MasterReqProcessor" class="com.idep.webservice.redirect.MasterReqProcessor"/>
<bean id="ServiceResponse" class="com.idep.webservice.impl.ServiceResponse"/>
<bean id="LeadReqQProcessor" class="com.idep.lead.req.processor.LeadReqQProcessor"/>

<bean id="shutdownStrategy" class="org.apache.camel.impl.DefaultShutdownStrategy">
        <property name="timeout" value="30"/>
</bean>

<cm:property-placeholder persistent-id="AMQCustomProperties"> 
 </cm:property-placeholder> 

<bean id="jmsConnectionFactory"
   class="org.apache.activemq.ActiveMQConnectionFactory">
   <property name="brokerURL" value="${amqbroker.host}:${amqbroker.port}" />
   <property name="userName" value="${amqbroker.username}"/>
   <property name="password" value="${amqbroker.password}"/>
</bean>
 
<bean id="pooledConnectionFactory"
   class="org.apache.activemq.pool.PooledConnectionFactory" init-method="start" destroy-method="stop">
   <property name="maxConnections" value="${amq.maxConnections}" />
   <property name="connectionFactory" ref="jmsConnectionFactory" />
</bean>
 
<bean id="jmsConfig"
   class="org.apache.camel.component.jms.JmsConfiguration">
   <property name="connectionFactory" ref="pooledConnectionFactory"/>
   <property name="concurrentConsumers" value="${amq.concurrentConsumers}"/>
   <property name="mapJmsMessage" value="${amq.mapJmsMessage}" />
   <property name="maxConcurrentConsumers" value="${amq.maxConcurrentConsumers}" />
   <property name="asyncConsumer" value="${amq.asyncConsumer}" />
   <property name="asyncStartListener" value="${amq.asyncStartListener}" />  
</bean>
 
 <bean id="activemq"
    class="org.apache.activemq.camel.component.ActiveMQComponent">
    <property name="configuration" ref="jmsConfig"/>
    <property name="transacted" value="${amq.transacted}"/>
    <property name="cacheLevelName" value="${amq.cacheLevelName}" />
</bean>

<camelContext id="MasterIntegrationService" xmlns="http://camel.apache.org/schema/blueprint">
  <route id="MasterServiceRoute">
    <from uri="cxfrs:bean:serviceEndpoint?continuationTimeout=90000" id="MasterServiceEndPoint"/>
    <convertBodyTo type="java.lang.String" id="InputConverter"/>
    <multicast id="MessageSender" parallelProcessing="true">
    	<pipeline id="LeadsQMsg">
        	<process ref="LeadReqQProcessor" id="LeadRequestQProcessor"/>
        	 <choice id="LeadReqQProcessorCallDecision">
        	   <when id="LeadReqQProcessorCall">
                <simple>${header.applicableLeadRequest} == "Yes"</simple>
               		 <to pattern="InOnly" uri="activemq:queue:LeadRequestQ?disableReplyTo=true" id="LeadRequestQ" />
               		<log message="lead request jmsMessageId : ${header.JMSMessageID}" />
                </when>
                </choice>
      	</pipeline>
      	<pipeline id="ServiceMessage">
        	<process ref="MasterReqProcessor" id="MasterRequestProcessor"/>
        	<recipientList stopOnException="true" id="MasterServiceInvoke">
          		<simple>${header.MServiceURL}</simple>
        	</recipientList>
        	<bean ref="ServiceResponse" method="sendResponse" id="ConfigResponse"/>
      	</pipeline>
    </multicast>
  </route>
</camelContext>

</blueprint>