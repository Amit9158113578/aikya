<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:cxf="http://camel.apache.org/schema/blueprint/cxf"
       xsi:schemaLocation="
       http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
        http://camel.apache.org/schema/blueprint/cxf http://camel.apache.org/schema/blueprint/cxf/camel-cxf.xsd
       http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd">
 <camelContext threadNamePattern="EDLTokio:#counter#" id="EdelTokioLifeReqQContext" xmlns="http://camel.apache.org/schema/blueprint">
 <onException id="ETConnectException">
    <exception>java.net.ConnectException</exception>
    <exception>java.net.SocketTimeoutException</exception>
    <exception>java.net.SocketException</exception>
    <handled>
      <constant>true</constant>
    </handled>
    <log message="EDL Tokio LIFE quote service seems to be down or not responded within stipulated time frame"/>
    <process ref="ExceptionMQMSGProcessor" customId="true" id="EDLTokioLifeExceptionMQMSGProcessor"/>
    <to pattern="InOnly" uri="activemq:queue:EdelTokioLifeResQ?timeToLive=120000&amp;includeSentJMSMessageID=true"/>
  </onException>
  <onException id="ETHttpOperationFailedException">
    <exception>org.apache.camel.component.http4.HttpOperationFailedException</exception>
    <handled>
      <constant>true</constant>
    </handled>
    <log message="EDL Tokio LIFE quote service HttpOperationFailed : check input values provided "/>
    <process ref="ExceptionMQMSGProcessor" customId="true" id="EDLTokioLifeHTTPExcpMQProcessor"/>
    <to pattern="InOnly" uri="activemq:queue:EdelTokioLifeResQ?timeToLive=120000&amp;includeSentJMSMessageID=true"/>
  </onException>
  <onException  id="ETTerminateExecution">
    <exception>com.idep.lifequote.exception.processor.ExecutionTerminator</exception>
    <handled>
      <constant>true</constant>
    </handled>
    <log message="EDL Tokio LIFE quote service Terminated "/>
    <process ref="ExceptionMQMSGProcessor" customId="true" id="EDLTokioLifeExceptionQuoteProcessor"/>
    <to pattern="InOnly" uri="activemq:queue:EdelTokioLifeResQ?timeToLive=120000&amp;includeSentJMSMessageID=true"/>
  </onException>
 <route id="EdelTokioLifeReqQListener">
    <from uri="activemq:queue:EdelTokioLifeReqQ" id="EdelTokioLifeReqQ">
      <description/>
    </from>
    <bean ref="P365LifeReqQListener" method="onMessage" id="ETLifeQuoteReqQListener"/>
    <process ref="LifeRequestQProcessor" id="ETLifeQuoteRequestProcessor"/>
    <process ref="LifeQuoteLoggerProcessor" id="EdelTokioLifeLoggerProcessor1"/>
    
    <process ref="LifeReqRiderProcessor" id="ETLifeQuoteRequestRiderProcessor"/>
    <process ref="LifeQuoteLoggerProcessor" id="EdelTokioLifeLoggerProcessor2"/>
    
    <process ref="LifeDroolReqFromProcessor" id="ETLifeQuoteEngineRequest"/>
    <process ref="LifeQuoteLoggerProcessor" id="EdelTokioLifeLoggerProcessor3"/>
    <choice id="ETSendQuoteRequest">
      <when id="ETQuoteEngineReq">
        <simple>${header.reqFlag} == "True"</simple>
        <log message="EdelTokio LifeQuote : quoteURL : ${header.quoteURL}  header quoteType ${header.quoteType} : message body :${body}  "/>
        <recipientList id="ETURL">
          <simple id="EDLTokioLIFEURL">${header.quoteURL}</simple>
        </recipientList>
        <log message="EdelTokio LifeQuote drool response : ${body}"/>
        <bean ref="LifeQuoteResponse"  method="sendQuoteResponse" id="ETQuoteResponseMapper"/>
        <process ref="LifeDroolResponseProcessor" id="ETQuoteEngineResponseProcessor"/>
        <process ref="LifeQuoteLoggerProcessor" id="EdelTokioLifeLoggerProcessor4"/>
        
        <process ref="LifeResRiderProcessor" id="ETLifeQuoteResRiderProcessor"/>
        <process ref="PremiumRatioCalculateProcessor" id="EDWPremiumRatioCalculateProcessor"/>
        <process ref="LifeQuoteLoggerProcessor" id="EdelTokioLifeLoggerProcessor5"/>
        
        <process ref="LifeQuoteResponseProcessor" id="ETLifeQuoteResponseProcessor"/>
        <process ref="LifeQuoteLoggerProcessor" id="EdelTokioLifeLoggerProcessor6"/>
        
        <bean ref="LifeQuoteResponse" method="sendQuoteResponse" id="ETSendResponse"/>
        <multicast id="ETPrepareQuoteResponseCopy">
          <pipeline  id="ETSaveQuotes">
            <log message="request/response sent to save EDELWEISS LIFE quote in database"/>
            <process ref="LifeQuoteDBSender" id="ETPushToQ"/>
            <process ref="LifeQuoteLoggerProcessor" id="EdelTokioLifeLoggerProcessor7"/>
            <to pattern="InOnly" uri="activemq:queue:LifeQuoteResultsQ" id="ETLifeQuoteResultsQ"/>
          </pipeline>
          <pipeline id="ETSendQuotes"> 
        	<process ref="LifeMQMsgProcessor" id="ETLifeQuoteResQProcessor"/>
        	<process ref="LifeQuoteLoggerProcessor" id="EdelTokioLifeLoggerProcessor8"/>
        	
        	<wireTap uri="activemqSecondary:queue:EdelTokioLifeResQ?includeSentJMSMessageID=true"/>
        	<to pattern="InOnly" id="ETLifeRESQ" uri="activemq:queue:EdelTokioLifeResQ?timeToLive=120000&amp;includeSentJMSMessageID=true"/>
        	<log message="EdelTokioLifeResQ JMS Message Id from Q : ${header.JMSMessageID}"/>
          </pipeline>
        </multicast>
      </when>
      <when id="ETQUOTEPROCESSFAILED">
        <simple id="ETINITIATEFAILURE">${header.reqFlag} == "False"</simple>
        <bean ref="LifeQuoteResponse" method="requestError" id="ETPrepareErrorMsg"/>
        <process ref="LifeMQMsgProcessor" id="ETErrorMsgProcessor"/>
        <process ref="LifeQuoteLoggerProcessor" id="EdelTokioLifeLoggerProcessor9"/>
        
        <wireTap uri="activemqSecondary:queue:EdelTokioLifeResQ?includeSentJMSMessageID=true"/>
        <to pattern="InOnly" id="ETLifeFAILRESQ" uri="activemq:queue:EdelTokioLifeResQ?timeToLive=120000&amp;includeSentJMSMessageID=true"/>
        <log message="EdelTokioLifeResQ JMS Message Id from Q : ${header.JMSMessageID}"/>        
      </when>
    </choice>
  </route>
  </camelContext>
</blueprint>