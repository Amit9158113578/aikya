<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
       xmlns:camel="http://camel.apache.org/schema/blueprint"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
       http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd">

<camelContext trace="false" streamCache="true" threadNamePattern="CARCARRIERQUOTE" id="CarCarrierReqQContext" xmlns="http://camel.apache.org/schema/blueprint">
 <onException>
    <exception>java.net.SocketTimeoutException</exception>
    <exception>java.net.SocketException</exception>
    <exception>java.net.ConnectException</exception>
    <handled>
      <constant>true</constant>
    </handled>
    <log message="Car quote service seems to be down or not responded within stipulated time frame"/>
    <process ref="ExceptionMQMSGProcessor" customId="true" id="CarException"/>
  </onException>
  <onException>
    <exception>org.apache.camel.component.http4.HttpOperationFailedException</exception>
    <handled>
      <constant>true</constant>
    </handled>
    <log message="Car quote service HttpOperationFailed : check input values provided "/>
    <process ref="ExceptionMQMSGProcessor" customId="true" id="ExcepProcessor"/>
  </onException>
  <onException>
    <exception>com.idep.carquote.exception.processor.ExecutionTerminator</exception>
    <exception>java.lang.Exception</exception>
    <handled>
      <constant>true</constant>
    </handled>
    <log message="Car Quote process terminated"/>
    <process ref="ExceptionMQMSGProcessor" customId="true" id="CustomExceptionProcessor"/>
  </onException>
   <route id="CarrierCarReqQListener">
    <from uri="activemq:queue:CarrierCarReqQ" id="CarrierReqQ">
      <description/>
      </from>
       <bean ref="CarQuoteRequestListener" method="onMessage" id="validateProduct" />
       <log message="CarQuoteRequestListener request :${body}"/>
       <process ref="CarRequestQProcessor" id="CarRequestProcessor"/>
       <log message="CarRequestQProcessor request :${body}"/>
       <choice id="CarrierDataValidation">
         	 <when id="DataNotFound">
            	<simple>${header.clientDataFound} == "No"</simple>
            		 <process ref="CarMQMsgProcessor" id="CarMQMsgProcessor"/>
            	 	 <process ref="ResponseQueueProcessor" id="CarResponseQueueProcessor"/>
            	</when>
            	<when id="DataFound">
            		<simple>${header.clientDataFound} == "Yes"</simple>
            		<log message="CarExtServiceReqProcessor before :${body}"/>
      			 	<process ref="CarExtServiceReqProcessor" id="CarExtServiceReqProcessor"/>
      			 	<log message="CarExtServiceReqProcessor after :${body}"/>
      			 	<process ref="ValidateServiceRequest" id="ValidateServiceRequest"/>
       				<loop id="quoteServiceInvoke" >
         	 			<header>noOfServiceInvoke</header>
			                 <choice id="validateQuoteServiceInvokeStatus">
	 							<when id="success">
            	 		 		<simple>${header.invokeservice} == "True"</simple>
                         		 <process ref="UpdateStageProcessor" id="TransformServiceRequest" />
            	 		 		<process ref="CarQuoteLoggerProcessor" id="CarIDVLoggerProcessor"/>
            	 		 		 <to pattern="InOut" uri="webservconsumer://invoke" id="idvservice" />
            					 <log message="response from invoke service:${body}"></log>
                			      <process ref="ValidateQuoteServiceResponse" id="ValidateResponse" />
         	 				 	 </when>
         	 				 	 </choice>
         	 				 	 </loop>
         	 				 	 <process ref="CarMQMsgProcessor" id="CarMQMsgQuoteProcessor"/>
            	 	 	     	<process ref="ResponseQueueProcessor" id="CarResponseQuoteProcessor"/>
            	 	 	    </when>
            	 	 	  </choice>
            	 	 	</route>
            	 </camelContext> 	

       </blueprint>
