<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:cxf="http://camel.apache.org/schema/blueprint/cxf"
	xsi:schemaLocation="
       http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
        http://camel.apache.org/schema/blueprint/cxf http://camel.apache.org/schema/blueprint/cxf/camel-cxf.xsd
       http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd">

	<cxf:rsServer id="CarProposalServiceEndpoint" address="/carproposal"
		serviceClass="com.idep.proposal.service.CarProposalService"
		loggingFeatureEnabled="true">
		<cxf:providers>
			<bean
				class="org.apache.cxf.rs.security.cors.CrossOriginResourceSharingFilter" />
		</cxf:providers>
	</cxf:rsServer>

	<camelContext trace="false" streamCache="true"
		threadNamePattern="CARPROP#counter#" id="CarProposalServiceContext"
		xmlns="http://camel.apache.org/schema/blueprint">
		<onException>
			<exception>java.net.SocketTimeoutException</exception>
			<exception>java.net.SocketException</exception>
			<handled>
				<constant>true</constant>
			</handled>
			<log message="Car proposal service seems to be down" />
			<process ref="ProposalExceptionProcessor" customId="true"
				id="ProposalExceptionProcessor" />
		</onException>
		<onException>
			<exception>org.apache.camel.component.http4.HttpOperationFailedException
			</exception>
			<handled>
				<constant>true</constant>
			</handled>
			<log message="Car proposal Http Operation Failed : check input provided" />
			<process ref="ProposalExceptionProcessor" customId="true"
				id="HttpOperationFailedException" />
		</onException>
		<onException>
			<exception>com.idep.proposal.exception.processor.ExecutionTerminator
			</exception>
			<exception>java.lang.Exception</exception>
			<handled>
				<constant>true</constant>
			</handled>
			<log message="Car proposal process terminated" />
			<process ref="ProposalExceptionProcessor" customId="true"
				id="ExecutionTerminator" />
			<bean ref="CarProposalServiceImpl" method="sendMessage" />
		</onException>
		<route id="CarProposalRoute">
			<from uri="cxfrs:bean:CarProposalServiceEndpoint" />
			<log message="CarProposalRoute execution started" />
			<choice id="PolicyProposalDecision">
				<when id="CarProposalReq">
					<simple>${header.operationName} == "submitCarProposal"</simple>
					<bean ref="CarProposalServiceImpl" method="submitCarProposal"
						id="CarProposalSubmitReq" />
					<process ref="CarProposalReqProcessor" id="CarProposalReqProcessor" />
					<process ref="ProposalAddressProcessor" id="CarProposalAddressProcessor" />
					<log message="ProposalAddressProcessor output: ${body}" />
					<multicast id="CarPropReq">
						<pipeline id="proposalDBCreation">
							<to uri="direct:proposalCreateRequest" />
						</pipeline>
						<pipeline id="serviceAPIInvoke">
							<process ref="TransformServiceRequest" id="TransformServiceRequest" />
							 <log message=" TransformProposalRequest response body : "/>
							<choice id="checkInspectionStatus">
								<when id="checkInspectionStatus">
									<simple>${header.checkInspectionStatus} == "Y"</simple>
									<process ref="UpdateInspectionStageProcessor" id="TransformServiceRequest" />
									<log message="You are In Inspection check service:"></log>
									<process ref="CarProposalLogProcessor" id="CarProposalLogProcessor1" />
									<to pattern="InOut" uri="webservconsumer://invoke" id="soap_OR_restServiceInvoke" />
									<log message="car proposal response from invoke service:"></log>
									<process ref="ValidateResponse" id="ValidateResponse" />
								</when>
							</choice>
							<loop id="proposalServiceInvoke">
								<header>noOfServiceInvoke</header>
								<choice id="validateProposalServiceInvokeStatus">
									<when id="success">
										<simple>${header.invokeservice} == "True"</simple>
										<log message="Not In Inspection check service:"></log>
										<process ref="UpdateStageProcessor" id="TransformServiceRequest" />
										<process ref="CarProposalLogProcessor" id="CarProposalLogProcessor1" />
										<to pattern="InOut" uri="webservconsumer://invoke" id="soap_OR_restServiceInvoke" />
										<log message="car proposal response from invoke service:"></log>
										<process ref="ValidateResponse" id="ValidateResponse" />
									</when>
								</choice>
							</loop>
							<choice id="validateResponse">
								<when id="CarProposalReq">
									<simple>${header.carrierReqMapConf} == "Yes"</simple>
									<process ref="CreateMapperRequest" id="CreateMapperRequest" />
									<log message="Output to mapper://mapdata: ${body}" />
									<to pattern="InOut" uri="mapper://mapdata" id="mapperIfNoServiceInvoke" />
									<process ref="MapperResponseHandler" id="MapperResponseHandler" />
								</when>
							</choice>
							<multicast id="ProposalResponse">
								<pipeline>
									<process ref="ProposalReqDBStore" id="CarrierProposalReqDBstore" />
								</pipeline>
								<pipeline>
									<bean ref="CarProposalServiceImpl" method="sendMessage" />
									<log message="Output to CarProposalServiceImpl ${body}" />
								</pipeline>
							</multicast>
						</pipeline>
					</multicast>
				</when>
			</choice>
		</route>
		<route id="createProposalRoute">
			<from uri="direct:proposalCreateRequest" />
			<log message="Car proposal create request : ${body}" />
			<process ref="CarProposalDBReqProcessor" id="CarProposalDBReqProcessor" />
			<to pattern="InOut" uri="joltTransformer://invoke" />
			<process ref="ProposalReqDBStore" id="ProposalReqDBStore" />
			<bean ref="CarProposalServiceImpl" method="sendMessage"
				id="CarProposalSubmitBase" />
			<log message="Proposal UI response : ${body}" />
		</route>
	</camelContext>

</blueprint>
