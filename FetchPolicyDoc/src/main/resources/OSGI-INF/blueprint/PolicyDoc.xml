<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:camel="http://camel.apache.org/schema/blueprint"
	xmlns:cxf="http://camel.apache.org/schema/blueprint/cxf" xmlns:jaxws="http://cxf.apache.org/blueprint/jaxws"
	xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.0.0"
	xmlns:camelcxf="http://camel.apache.org/schema/blueprint/cxf"
	xsi:schemaLocation="
       http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
       http://camel.apache.org/schema/blueprint/cxf http://camel.apache.org/schema/blueprint/cxf/camel-cxf.xsd
       http://cxf.apache.org/blueprint/jaxws http://cxf.apache.org/schemas/blueprint/jaxws.xsd
       http://camel.apache.org/schema/blueprint  http://camel.apache.org/schema/blueprint/camel-blueprint-2.12.0.xsd">

	<bean id="myRedeliveryPolicyConfig" class="org.apache.camel.processor.RedeliveryPolicy">
		<property name="maximumRedeliveries" value="1" />
		<property name="redeliveryDelay" value="5000" />
		<property name="asyncDelayedRedelivery" value="true" />
		<property name="retryAttemptedLogLevel" value="WARN" />
	</bean>

	<cxf:rsServer id="policydocEndPoint" address="/policydoc"
		serviceClass="com.idep.summaryUtils.ServiceClass"
		loggingFeatureEnabled="true">
		<cxf:providers>
			<bean
				class="org.apache.cxf.rs.security.cors.CrossOriginResourceSharingFilter" />
		</cxf:providers>
	</cxf:rsServer>

	<bean id="PolicyRequest" class="com.idep.createPolicyDoc.PolicyRequest" />
	<bean id="ServiceImpl" class="com.idep.summaryUtils.ServiceImpl" />
	<bean id="ResponseClass" class="com.idep.createPolicyDoc.ResponseClass" />
	<bean id="RequestListener" class="com.idep.summaryUtils.RequestListener" />
	<bean id="CreatePolicyRequest" class="com.idep.createPolicyDoc.CreatePolicyRequest" />

	<camelContext id="PolicyDocContext" trace="false"
		threadNamePattern="PolicyDoc:#counter#" xmlns="http://camel.apache.org/schema/blueprint">

		<route id="PolicyDoc">
			<from uri="cxfrs:bean:policydocEndPoint?continuationTimeout=90000" />
			<process ref="PolicyRequest" id="PolicyRequestProcessor" />
			<choice id="validatePolicyCreation">
			 <when id="createPolicyRequest">
				   <simple>${header.createPolicy} == "Y"</simple>
				       <log message="createPolicy policy request :${body}" />
				      <to pattern="InOut" uri="xpathmapper://xpathmapdata" id="createRequest" />
				      <process ref="CreatePolicyRequest" id="CreatePolicyRequest" />
			          <process ref="ResponseClass" id="ResponseClassProcessor" />
					  <to pattern="InOut" uri="webservconsumer://invoke" id="createPolicyService" />
					   <bean id="ServiceImplBean" ref="ServiceImpl" method="sendResposne" />
			       </when>
			     <when id="fetchPolicyRequest">
				  <simple>${header.createPolicy} == "N"</simple>
				   <log message="fetch policy request :${body}" />
			        <process ref="GetPolicyDocDetailsProcessor" id="GetPolicyDocDetailsProcessor"/>
			        <bean ref="FetchPolicyDocServiceImpl" method="sendMessage" id="sendMessage"/>
			  </when>
		   </choice>
		</route>
	</camelContext>
</blueprint>
