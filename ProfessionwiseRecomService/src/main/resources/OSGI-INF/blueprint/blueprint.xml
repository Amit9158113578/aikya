<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
       xmlns:cxf="http://camel.apache.org/schema/blueprint/cxf"
       xsi:schemaLocation="
       http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
       http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd">

  <cxf:rsServer id="ProfessionalRecomEngineEndpoint" address="/profinsrecomservice" serviceClass="com.idep.professionalrecomengine.service.ProfessionalRecomService"
		loggingFeatureEnabled="true">
		<cxf:providers>
			<bean
				class="org.apache.cxf.rs.security.cors.CrossOriginResourceSharingFilter" />
		</cxf:providers>
	</cxf:rsServer>

<cm:property-placeholder persistent-id="AMQCustomProperties"> 
</cm:property-placeholder> 
 <!--  
<bean id="ProfessionalRecomServiceImpl" class="com.idep.professionalrecomengine.impl.ProfessionalRecomServiceImpl"/>
<bean id="RiskAssessmentConfigData" class="com.idep.professionalrecomengine.riskdata.RiskAssessmentConfigData"/>
<bean id="InputRequestParsing" class="com.idep.professionalrecomengine.reqparsing.InputRequestParsing"/>
-->
<bean id="ProfessionalRecomServiceImpl" class="com.idep.professionalrecomengine.impl.ProfessionalRecomServiceImpl"/>
<bean id="GetAlgorithmResponse" class="com.idep.professionalrecomengine.algorithm.GetAlgorithmResponse"/>

<bean id="jmsConnectionFactory"
   class="org.apache.activemq.ActiveMQConnectionFactory">
   <property name="brokerURL" value="${amqbroker.host}:${amqbroker.port}" />
   <property name="userName" value="${amqbroker.username}"/>
   <property name="password" value="${amqbroker.password}"/>
</bean>
 
<bean id="pooledConnectionFactory"
   class="org.apache.activemq.pool.PooledConnectionFactory" init-method="start" destroy-method="stop">
   <property name="maxConnections" value="${amq.maxConnections}" />
   <property name="connectionFactory" ref="jmsConnectionFactory" />
</bean>
<bean id="jmsConfig"
   class="org.apache.camel.component.jms.JmsConfiguration">
   <property name="connectionFactory" ref="pooledConnectionFactory"/>
   <property name="concurrentConsumers" value="${amq.concurrentConsumers}"/>
   <property name="mapJmsMessage" value="${amq.mapJmsMessage}" />
   <property name="maxConcurrentConsumers" value="${amq.maxConcurrentConsumers}" />
   <property name="asyncConsumer" value="${amq.asyncConsumer}" />
   <property name="asyncStartListener" value="${amq.asyncStartListener}" />  
</bean>
 
 <bean id="activemq"
    class="org.apache.activemq.camel.component.ActiveMQComponent">
    <property name="configuration" ref="jmsConfig"/>
    <property name="transacted" value="${amq.transacted}"/>
    <property name="cacheLevelName" value="${amq.cacheLevelName}" />
</bean>

<bean id="jmsConnectionFactorySecondary"
   class="org.apache.activemq.ActiveMQConnectionFactory">
   <property name="brokerURL" value="${amqbroker.secondaryhost}:${amqbroker.secondaryport}" />
   <property name="userName" value="${amqbroker.username}"/>
   <property name="password" value="${amqbroker.password}"/>
</bean>
 
<bean id="pooledConnectionFactorySecondary"
   class="org.apache.activemq.pool.PooledConnectionFactory" init-method="start" destroy-method="stop">
  <property name="maxConnections" value="${amq.maxConnections}" /> 
   <property name="connectionFactory" ref="jmsConnectionFactorySecondary" />
</bean>
<bean id="jmsConfigSecondary"
   class="org.apache.camel.component.jms.JmsConfiguration">
   <property name="connectionFactory" ref="pooledConnectionFactorySecondary"/>
   <property name="concurrentConsumers" value="${amq.concurrentConsumers}"/>
   <property name="mapJmsMessage" value="${amq.mapJmsMessage}" />
   <property name="maxConcurrentConsumers" value="${amq.maxConcurrentConsumers}" />
   <property name="asyncConsumer" value="${amq.asyncConsumer}" />
   <property name="asyncStartListener" value="${amq.asyncStartListener}" />  
</bean>
 
 <bean id="activemqSecondary"
    class="org.apache.activemq.camel.component.ActiveMQComponent">
    <property name="configuration" ref="jmsConfigSecondary"/>
    <property name="transacted" value="${amq.transacted}"/>
    <property name="cacheLevelName" value="${amq.cacheLevelName}" />
</bean>
  
<camelContext threadNamePattern="INSURANCERECSERVICE" id="InsuranceRecommender" xmlns="http://camel.apache.org/schema/blueprint">
  <threadPoolProfile poolSize="100" maxPoolSize="200" maxQueueSize="1000" customId="true" id="insuranceRecommenderReqPool"/>
<!--   <route id="InsuranceRecommenderRoute">
    <from uri="cxfrs:bean:ProfessionalRecomEngineEndpoint"/>
    <bean ref="ProfessionalRecomServiceImpl" method="getInputRequest" id="getInsuranceRecReqBean"/>
    <process ref="RiskAssessmentConfigData" id="RiskAssessmentConfigData"/>
    <process ref="InputRequestParsing" id="InputRequestParsing"/>
    <bean ref="ProfessionalRecomServiceImpl" method="setInputRequest" id="setInsuranceRecReqBean"/>
     -->
    <route id="InsuranceRecommenderRoute">
    <from uri="cxfrs:bean:ProfessionalRecomEngineEndpoint"/>
    <bean ref="ProfessionalRecomServiceImpl" method="getInputRequest" id="getInsuranceRecReqBean"/>
    <process ref="GetAlgorithmResponse" id="GetAlgorithmResponse"/>
    <bean ref="ProfessionalRecomServiceImpl" method="setInputRequest" id="setInsuranceRecReqBean"/>
     
    
  </route>
</camelContext>

</blueprint>
