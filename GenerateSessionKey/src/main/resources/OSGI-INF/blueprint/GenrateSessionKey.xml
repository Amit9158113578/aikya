<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
        xmlns:cxf="http://camel.apache.org/schema/blueprint/cxf"
       xsi:schemaLocation="
       http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
       http://camel.apache.org/schema/blueprint/cxf http://camel.apache.org/schema/blueprint/cxf/camel-cxf.xsd
	   http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd">

<cxf:rsServer id="GenrateSessionKeyEndpoint" address="/generatesessionkey" 
serviceClass="com.idep.sessionkey.service.GenrateSessionKeyService" loggingFeatureEnabled="true" >
<cxf:providers>
        <bean class="org.apache.cxf.rs.security.cors.CrossOriginResourceSharingFilter" />
        
</cxf:providers>
</cxf:rsServer>
<cm:property-placeholder persistent-id="AMQCustomProperties"> 
 </cm:property-placeholder> 

<bean id="jmsConnectionFactory"
   class="org.apache.activemq.ActiveMQConnectionFactory">
   <property name="brokerURL" value="${amqbroker.host}:${amqbroker.port}" />
   <property name="userName" value="${amqbroker.username}"/>
   <property name="password" value="${amqbroker.password}"/>
</bean>

<bean id="pooledConnectionFactory"
   class="org.apache.activemq.pool.PooledConnectionFactory" init-method="start" destroy-method="stop">
   <property name="maxConnections" value="${amq.maxConnections}" />
   <property name="connectionFactory" ref="jmsConnectionFactory" />
</bean>
 
<bean id="jmsConfig"
   class="org.apache.camel.component.jms.JmsConfiguration">
   <property name="connectionFactory" ref="pooledConnectionFactory"/>
   <property name="concurrentConsumers" value="${amq.concurrentConsumers}"/>
   <property name="mapJmsMessage" value="${amq.mapJmsMessage}" />
   <property name="maxConcurrentConsumers" value="${amq.maxConcurrentConsumers}" />
   <property name="asyncConsumer" value="${amq.asyncConsumer}" />
   <property name="asyncStartListener" value="${amq.asyncStartListener}" />
</bean>
 
<bean id="activemq"
    class="org.apache.activemq.camel.component.ActiveMQComponent">
    <property name="configuration" ref="jmsConfig"/>
    <property name="transacted" value="${amq.transacted}"/>  
    <property name="cacheLevelName" value="${amq.cacheLevelName}" />
</bean>

<bean id="SessionKeyhutdownStrategy" class="org.apache.camel.impl.DefaultShutdownStrategy">
        <property name="timeout" value="30"/>
</bean>
<!-- <bean id="http" class="org.apache.camel.component.http.HttpComponent">
    <property name="camelContext" ref="SesionKeyContext"/>
    <property name="httpConnectionManager" ref="SesionKeyHttpConnectionManager"/>
</bean>

<bean id="https" class="org.apache.camel.component.http.HttpComponent">
    <property name="camelContext" ref="SesionKeyContext"/>
    <property name="httpConnectionManager" ref="SesionKeyHttpConnectionManager"/>
</bean> -->
 
<bean id="SesionKeyHttpConnectionManager" class="org.apache.commons.httpclient.MultiThreadedHttpConnectionManager">
    <property name="params" ref="SesionKeyHttpConnectionManagerParams"/>
</bean>
 
<bean id="SesionKeyHttpConnectionManagerParams" class="org.apache.commons.httpclient.params.HttpConnectionManagerParams">
    <property name="defaultMaxConnectionsPerHost" value="5"/>
    <property name="maxTotalConnections" value="100" />
    <property name="connectionTimeout" value="10000" />
    <property name="soTimeout" value="60000"/>     	
</bean>

<bean id="GenrateSessionKeyService" class="com.idep.sessionkey.service.GenrateSessionKeyService"/>
<bean id="GenrateSessionkeyProcessor" class="com.idep.sessionkey.service.processor.GenrateSessionkeyProcessor"/>
<bean id="ResposneProcessor" class="com.idep.sessionkey.service.resposne.ResposneProcessor"/>
<bean id="SessionKeyDBStoreProcessor" class="com.idep.sessionkey.service.processor.SessionKeyDBStoreProcessor"/>

  <camelContext xmlns="http://camel.apache.org/schema/blueprint" id="SesionKeyContext">
    <route id="GenrateSessionKetRoute">
    <from uri="cxfrs:bean:GenrateSessionKeyEndpoint" />
        <log message="Genrate Session Key requet recived : ${body}"/>
     <process ref="GenrateSessionkeyProcessor" id="GenrateSessionKeyProcessor"/>
      <process ref="SessionKeyDBStoreProcessor" id="SessionKeyDBStoreProcessor"/>
      <log message="Genrate Session Key stored in DB"/>
        <process ref="ResposneProcessor" id="ResposneProcessor"/>
     <log message="Genrate Session Key final resposne : ${body}"/>
       	<marshal>
				<json prettyPrint="true" library="Jackson" />
		</marshal>
    </route>
  </camelContext>

</blueprint>
