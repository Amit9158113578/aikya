<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:camel="http://camel.apache.org/schema/blueprint"
	   xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
       xmlns:cxf="http://camel.apache.org/schema/blueprint/cxf"
        
       xsi:schemaLocation=" 
       http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
       http://camel.apache.org/schema/blueprint/cxf http://camel.apache.org/schema/blueprint/cxf/camel-cxf.xsd
       http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd">

<!-- 	
<cm:property-placeholder persistent-id="AMQCustomProperties"> 
 </cm:property-placeholder> 

<bean id="jmsConnectionFactory"
   class="org.apache.activemq.ActiveMQConnectionFactory">
   <property name="brokerURL" value="${amqbroker.host}:${amqbroker.port}" />
   <property name="userName" value="${amqbroker.username}"/>
   <property name="password" value="${amqbroker.password}"/>
</bean>
 
<bean id="pooledConnectionFactory"
   class="org.apache.activemq.pool.PooledConnectionFactory" init-method="start" destroy-method="stop">
   <property name="maxConnections" value="${amq.maxConnections}" />
   <property name="connectionFactory" ref="jmsConnectionFactory" />
</bean>
 
<bean id="jmsConfig"
   class="org.apache.camel.component.jms.JmsConfiguration">
   <property name="connectionFactory" ref="pooledConnectionFactory"/>
   <property name="concurrentConsumers" value="${amq.concurrentConsumers}"/>
   <property name="mapJmsMessage" value="${amq.mapJmsMessage}" />
   <property name="maxConcurrentConsumers" value="${amq.maxConcurrentConsumers}" />
   <property name="asyncConsumer" value="${amq.asyncConsumer}" />
   <property name="asyncStartListener" value="${amq.asyncStartListener}" />  
</bean>
 
 <bean id="activemq"
    class="org.apache.activemq.camel.component.ActiveMQComponent">
    <property name="configuration" ref="jmsConfig"/>
</bean> --> 

  <camelContext xmlns="http://camel.apache.org/schema/blueprint" trace="false">
    <route>
     <from uri="activemq:queue:SmsEmailOTPQ" id="SmsEmailOTPQ">
      <description/>
    </from>
    <bean ref="SmsEmailOTPQListner" method="onMessage" id="SmsEmailOTPQListner"/>
    <log message="Send SMS EMAIL Blueprint Request Received ${body}" />
    <process ref="GenerateSMSEmailOTP" id="GenerateSMSEmailOTP"/>
     <multicast id="SMSEMAILMulticast" parallelProcessing="true">
      					<pipeline>
      					<choice id="SMSOTPCHOICE">
	       <when id="OTPSMSCON">
	         <simple>${header.SMS} == "true"</simple>
	<process ref="GenerateSMSRequestProcessor" id="GenerateSMSRequestProcessor"/>
    <bean ref="SMSEmailImplService" method="sendSMSRequest" id="BeanSMS"/>
        <multicast id="SMSQueueMessage">
          <to pattern="InOnly" uri="activemq:queue:SMS" id="QueueSMS"/>
          <bean ref="SMSResponse" method="getSMSData" id="BeanSMSQResponse"/>
        </multicast>
        </when></choice>
      	</pipeline>
      	<pipeline>
      		<choice id="EMAILOTP">
      	 <when id="EMAILOTPCON">
	         <simple>${header.EMAIL} == "true"</simple>
	         <process ref="GenerateEmailOtpRequest" id="GenerateEmailOtpRequest"/>       
     <bean ref="SMSEmailImplService" method="sendEmailRequest" id="BeanEmail"/>
        <multicast id="EmailQMessage">
          <to pattern="InOnly" uri="activemq:queue:Emails" id="QueueEmail"/>
          <bean ref="EmailResponse" method="getEmailData" id="BeanEmailQResponse"/>
        </multicast>
        </when>
        </choice>
      	
      	</pipeline>
      	</multicast>				
         
        
   
    </route>
  </camelContext>

</blueprint>
